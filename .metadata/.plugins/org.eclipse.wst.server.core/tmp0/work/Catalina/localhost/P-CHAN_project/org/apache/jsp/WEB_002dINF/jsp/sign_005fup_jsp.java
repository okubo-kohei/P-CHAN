/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2023-01-27 03:01:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class sign_005fup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<!--4 会員情報登録-->\r\n");
      out.write("<html lang=\"ja\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>p-chan</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/sign_up.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

HttpSession ses = request.getSession();
String error = (String)ses.getAttribute("SIGNUPERROR");

      out.write("\r\n");
      out.write("	<script src=\"js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("	<script src=\"js/passwordCheck.js\"></script>\r\n");
      out.write("	<h1>登録画面</h1>\r\n");
      out.write("	<p>※は入力必須</p>\r\n");
      out.write("	\r\n");
      out.write("	<script src=\"https://yubinbango.github.io/yubinbango/yubinbango.js\"\r\n");
      out.write("		charset=\"UTF-8\"></script>\r\n");
      out.write("	<!--住所読み込み-->\r\n");
      out.write("	<form action=\"FromSignUpServlet\" class=\"h-adr\" method=\"post\">\r\n");
      out.write("	");

		if(error != null){
	
      out.write("\r\n");
      out.write("			<font color=\"red\">このメールアドレスは使用されています</font>\r\n");
      out.write("	");

		}
	
      out.write("\r\n");
      out.write("		<span class=\"p-country-name\" style=\"display: none;\">Japan</span>\r\n");
      out.write("		<dl>\r\n");
      out.write("			<dt>\r\n");
      out.write("				<span class=\"must\">※</span>氏名\r\n");
      out.write("			</dt>\r\n");
      out.write("			<dd>\r\n");
      out.write("				<input type=\"text\" name=\"name\" id=\"name\" required>\r\n");
      out.write("			</dd>\r\n");
      out.write("\r\n");
      out.write("			<dt>\r\n");
      out.write("				<span class=\"must\">※</span>郵便番号\r\n");
      out.write("			</dt>\r\n");
      out.write("			<dd>\r\n");
      out.write("				<input type=\"text\" name=\"post1\" class=\"p-postal-code\" size=\"3\"\r\n");
      out.write("					maxlength=\"3\" required> - <input type=\"text\" name=\"post2\"\r\n");
      out.write("					class=\"p-postal-code\" size=\"4\" maxlength=\"4\" required>\r\n");
      out.write("			</dd>\r\n");
      out.write("\r\n");
      out.write("			<dt>\r\n");
      out.write("				<span class=\"must\">※</span>都道府県\r\n");
      out.write("			</dt>\r\n");
      out.write("			<dd>\r\n");
      out.write("				<input type=\"text\" name=\"prefecture\" class=\"p-region\" list=\"pref\"\r\n");
      out.write("					placeholder=\"都道府県を選択する\" required />\r\n");
      out.write("			</dd>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<dt>\r\n");
      out.write("				<span class=\"must\">※</span>市区町村\r\n");
      out.write("			</dt>\r\n");
      out.write("			<dd>\r\n");
      out.write("				<input type=\"text\" name=\"municipality\" class=\"p-locality\" required />\r\n");
      out.write("			</dd>\r\n");
      out.write("\r\n");
      out.write("			<dt>\r\n");
      out.write("				<span class=\"must\">※</span>丁目・番地・号\r\n");
      out.write("			</dt>\r\n");
      out.write("			<dd>\r\n");
      out.write("				<input type=\"text\" name=\"address\"\r\n");
      out.write("					class=\"p-street-address p-extended-address\" required />\r\n");
      out.write("			</dd>\r\n");
      out.write("\r\n");
      out.write("			<dt>建物名・部屋番号</dt>\r\n");
      out.write("			<dd>\r\n");
      out.write("				<input type=\"text\" name=\"building\" id=\"roomname\">\r\n");
      out.write("			</dd>\r\n");
      out.write("\r\n");
      out.write("			<dt>\r\n");
      out.write("				<span class=\"must\">※</span>電話番号(-を除く)\r\n");
      out.write("			</dt>\r\n");
      out.write("			<dd>\r\n");
      out.write("				<input type=\"tel\" name=\"tel\" id=\"tel\" required>\r\n");
      out.write("			</dd>\r\n");
      out.write("\r\n");
      out.write("			<dt>\r\n");
      out.write("				<span class=\"must\">※</span>メールアドレス\r\n");
      out.write("			</dt>\r\n");
      out.write("			<dd>\r\n");
      out.write("				<input type=\"email\" name=\"mail\" id=\"mail\" required>\r\n");
      out.write("			</dd>\r\n");
      out.write("\r\n");
      out.write("			<dt>\r\n");
      out.write("				<span class=\"must\">※</span>パスワード（8文字以上）\r\n");
      out.write("			</dt>\r\n");
      out.write("			<dd>\r\n");
      out.write("				<input type=\"password\" name=\"password\" id=\"password\" minlength=\"8\" required>\r\n");
      out.write("			</dd>\r\n");
      out.write("\r\n");
      out.write("			<dt>\r\n");
      out.write("				<span class=\"must\">※</span>パスワード(確認)\r\n");
      out.write("			</dt>\r\n");
      out.write("			<dd>\r\n");
      out.write("				<input type=\"password\" name=\"passwordCheck\" id=\"passwordCheck\"\r\n");
      out.write("					oninput=\"checkPassword(this)\" required>\r\n");
      out.write("			</dd>\r\n");
      out.write("		</dl>\r\n");
      out.write("		<input type=\"submit\" value=\"登録\">\r\n");
      out.write("		<!--5 会員情報登録完了-->\r\n");
      out.write("	</form>\r\n");
      out.write("	<form action=\"MovingLogin\">\r\n");
      out.write("		<input type=\"submit\" value=\"戻る\">\r\n");
      out.write("	</form>\r\n");
      out.write("	<!--1 ログイン-->\r\n");
      out.write("\r\n");
      out.write("	<datalist id=\"pref\">\r\n");
      out.write("		<!--都道府県-->\r\n");
      out.write("		<option value=\"北海道\">北海道</option>\r\n");
      out.write("		<option value=\"青森県\">青森県</option>\r\n");
      out.write("		<option value=\"岩手県\">岩手県</option>\r\n");
      out.write("		<option value=\"宮城県\">宮城県</option>\r\n");
      out.write("		<option value=\"秋田県\">秋田県</option>\r\n");
      out.write("		<option value=\"山形県\">山形県</option>\r\n");
      out.write("		<option value=\"福島県\">福島県</option>\r\n");
      out.write("		<option value=\"茨城県\">茨城県</option>\r\n");
      out.write("		<option value=\"栃木県\">栃木県</option>\r\n");
      out.write("		<option value=\"群馬県\">群馬県</option>\r\n");
      out.write("		<option value=\"埼玉県\">埼玉県</option>\r\n");
      out.write("		<option value=\"千葉県\">千葉県</option>\r\n");
      out.write("		<option value=\"東京都\">東京都</option>\r\n");
      out.write("		<option value=\"神奈川県\">神奈川県</option>\r\n");
      out.write("		<option value=\"新潟県\">新潟県</option>\r\n");
      out.write("		<option value=\"富山県\">富山県</option>\r\n");
      out.write("		<option value=\"石川県\">石川県</option>\r\n");
      out.write("		<option value=\"福井県\">福井県</option>\r\n");
      out.write("		<option value=\"山梨県\">山梨県</option>\r\n");
      out.write("		<option value=\"長野県\">長野県</option>\r\n");
      out.write("		<option value=\"岐阜県\">岐阜県</option>\r\n");
      out.write("		<option value=\"静岡県\">静岡県</option>\r\n");
      out.write("		<option value=\"愛知県\">愛知県</option>\r\n");
      out.write("		<option value=\"三重県\">三重県</option>\r\n");
      out.write("		<option value=\"滋賀県\">滋賀県</option>\r\n");
      out.write("		<option value=\"京都府\">京都府</option>\r\n");
      out.write("		<option value=\"大阪府\">大阪府</option>\r\n");
      out.write("		<option value=\"兵庫県\">兵庫県</option>\r\n");
      out.write("		<option value=\"奈良県\">奈良県</option>\r\n");
      out.write("		<option value=\"和歌山県\">和歌山県</option>\r\n");
      out.write("		<option value=\"鳥取県\">鳥取県</option>\r\n");
      out.write("		<option value=\"島根県\">島根県</option>\r\n");
      out.write("		<option value=\"岡山県\">岡山県</option>\r\n");
      out.write("		<option value=\"広島県\">広島県</option>\r\n");
      out.write("		<option value=\"山口県\">山口県</option>\r\n");
      out.write("		<option value=\"徳島県\">徳島県</option>\r\n");
      out.write("		<option value=\"香川県\">香川県</option>\r\n");
      out.write("		<option value=\"愛媛県\">愛媛県</option>\r\n");
      out.write("		<option value=\"高知県\">高知県</option>\r\n");
      out.write("		<option value=\"福岡県\">福岡県</option>\r\n");
      out.write("		<option value=\"佐賀県\">佐賀県</option>\r\n");
      out.write("		<option value=\"長崎県\">長崎県</option>\r\n");
      out.write("		<option value=\"熊本県\">熊本県</option>\r\n");
      out.write("		<option value=\"大分県\">大分県</option>\r\n");
      out.write("		<option value=\"宮崎県\">宮崎県</option>\r\n");
      out.write("		<option value=\"鹿児島県\">鹿児島県</option>\r\n");
      out.write("		<option value=\"沖縄県\">沖縄県</option>\r\n");
      out.write("	</datalist>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<footer> </footer>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
