/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2023-01-24 05:59:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import dto.BuyProductDto;
import dao.ProductDao;
import dto.ProductDto;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("dto.ProductDto");
    _jspx_imports_classes.add("dto.BuyProductDto");
    _jspx_imports_classes.add("dao.ProductDao");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<!--3カート-->\r\n");
      out.write("<html lang=\"ja\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>p-chan</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/cart.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\">\r\n");

HttpSession ses = request.getSession();
Cookie cookie[] = request.getCookies();
ArrayList<BuyProductDto> buyList = (ArrayList<BuyProductDto>) ses.getAttribute("CART");
String judge = null;
if (cookie != null) {
	for (int i = 0; i < cookie.length; i++) {
		if (cookie[i].getName().equals("memberId")) {
	judge = cookie[i].getValue();
		}
	}
}

      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		<nav id=\"global_navi\">\r\n");
      out.write("			<form action=\"FromHeaderServlet\" method=\"post\">\r\n");
      out.write("				<ul>\r\n");
      out.write("					<!--/商品検索機能-->\r\n");
      out.write("					<li id=\"searsub\"><input type=\"search\" id=\"search\"\r\n");
      out.write("						name=\"searchWords\" placeholder=\"キーワードを入力\">\r\n");
      out.write("						<button type=\"submit\" id=\"submit\" value=\"search\" name=\"flg\">検索</button>\r\n");
      out.write("					</li>\r\n");
      out.write("					<!--/会員情報表示-->\r\n");
      out.write("					<li>\r\n");
      out.write("						");

						if (judge != null) {
						
      out.write("\r\n");
      out.write("						<div class=\"profile icon\"></div>\r\n");
      out.write("						<button type=\"submit\" value=\"member\" name=\"flg\">会員情報</button> ");

 } else {
 
      out.write("\r\n");
      out.write("						<div class=\"profile icon\"></div>\r\n");
      out.write("						<button type=\"submit\" value=\"login\" name=\"flg\">会員情報</button> ");

 }
 
      out.write("\r\n");
      out.write("					</li>\r\n");
      out.write("					<!--/カート画面-->\r\n");
      out.write("					<li>\r\n");
      out.write("						");

						if (judge != null) {
						
      out.write("\r\n");
      out.write("						<div class=\"cart icon\"></div> <i class=\"gg-shopping-cart\"></i>\r\n");
      out.write("						<button type=\"submit\" value=\"cart\" name=\"flg\">カート</button> ");

 } else {
 
      out.write("\r\n");
      out.write("						<div class=\"cart icon\"></div> <i class=\"gg-shopping-cart\"></i>\r\n");
      out.write("						<button type=\"submit\" value=\"login\" name=\"flg\">カート</button> ");

 }
 
      out.write("\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>\r\n");
      out.write("						<!--/ログイン画面-->\r\n");
      out.write("						<div id=\"login\">\r\n");
      out.write("							");

							if (judge != null) {
							
      out.write("\r\n");
      out.write("							<input type=\"hidden\" name=\"beforeLogout\" value=\"cart.jsp\">\r\n");
      out.write("							<div class=\"key icon\"></div>\r\n");
      out.write("							<button type=\"submit\" value=\"logout\" name=\"flg\">ログアウト</button>\r\n");
      out.write("							");

							} else {
							
      out.write("\r\n");
      out.write("							<div class=\"key icon\"></div>\r\n");
      out.write("							<button type=\"submit\" value=\"login\" name=\"flg\">ログイン</button>\r\n");
      out.write("							");

							}
							
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("					</li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</form>\r\n");
      out.write("		</nav>\r\n");
      out.write("	</header>\r\n");
      out.write("\r\n");
      out.write("	<div id=\"left\">\r\n");
      out.write("		<form action=\"MovingIndex\">\r\n");
      out.write("			<input type=\"submit\" value=\"一覧へ戻る\" id=\"index_url\">\r\n");
      out.write("		</form>\r\n");
      out.write("		<div id=\"cart_index\">\r\n");
      out.write("			<p id=\"cart_txt\">カート</p>\r\n");
      out.write("			");

			int total1 = 0;
			int total2 = 0;
			if (buyList == null) {
			
      out.write("\r\n");
      out.write("			<p id=\"no_product\">カートに商品がありません</p>\r\n");
      out.write("			");

			} else {
			for (int i = 0; i < buyList.size(); i++) {
				BuyProductDto allGoods = (BuyProductDto) buyList.get(i);
			
      out.write("\r\n");
      out.write("			<div id=\"product\">\r\n");
      out.write("				<div class=\"products\" id=\"");
      out.print(allGoods.getProductId());
      out.write("\">\r\n");
      out.write("					<img src=\"images/");
      out.print(allGoods.getProductId());
      out.write(".jpg\" alt=\"商品画像\">\r\n");
      out.write("					<div id=\"product_txt\">\r\n");
      out.write("						<p>\r\n");
      out.write("							商品名:");
      out.print(allGoods.getProductName());
      out.write("</p>\r\n");
      out.write("						<p>\r\n");
      out.write("							単体価格:");
      out.print(allGoods.getPrice());
      out.write("円\r\n");
      out.write("						</p>\r\n");
      out.write("						<p>\r\n");
      out.write("							購入数:");
      out.print(allGoods.getQuantity());
      out.write("</p>\r\n");
      out.write("						");

						total1 += allGoods.getQuantity();
						total2 += allGoods.getPrice() * allGoods.getQuantity();
						
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			");

			}
			}
			
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div id=\"right\">\r\n");
      out.write("		<section id=\"buy\">\r\n");
      out.write("			<p>");
      out.print(total1);
      out.write("個の商品\r\n");
      out.write("			</p>\r\n");
      out.write("			<p>\r\n");
      out.write("				小計 <span id=\"price\"> ");
      out.print(total2);
      out.write("円\r\n");
      out.write("				</span> <span id=\"tax\">(税込)</span>\r\n");
      out.write("			</p>\r\n");
      out.write("			");

			if (judge != null && buyList != null) {
			
      out.write("\r\n");
      out.write("			<form action=\"ToBuyServlet\" method=\"post\">\r\n");
      out.write("				<input type=\"hidden\" name=\"flg\" value=\"cart\">\r\n");
      out.write("				<button type=\"submit\" id=\"buy_url\">購 入</button>\r\n");
      out.write("			</form>\r\n");
      out.write("			");

			} else if (judge == null && buyList != null) {
			
      out.write("\r\n");
      out.write("			<form action=\"FromHeaderServlet\" method=\"post\">\r\n");
      out.write("				<input type=\"hidden\" name=\"flg\" value=\"login\">\r\n");
      out.write("				<button type=\"submit\" id=\"buy_url\">購 入</button>\r\n");
      out.write("			</form>\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("		</section>\r\n");
      out.write("		<section id=\"recommend\">\r\n");
      out.write("			<p>おすすめの商品</p>\r\n");
      out.write("			");

			if (buyList != null) {
				for (int i = 0; i < buyList.size(); i++) {
					BuyProductDto allGoods = (BuyProductDto) buyList.get(i);
					String rec = allGoods.getProductId();
					int rec2 = Integer.parseInt(rec.substring(4, 5));
					char rec3;
					if (rec2 != 4) {
				rec2 = rec2 + 1;
				rec3 = Character.forDigit(rec2, 10);
					} else {
				rec2 = rec2 - 3;
				rec3 = Character.forDigit(rec2, 10);
					}
					StringBuilder sb = new StringBuilder(rec);
					sb.setCharAt(4, rec3);
					rec = sb.toString();
					ProductDao pDao = new ProductDao();
					ProductDto pDto = new ProductDto();
					pDto = pDao.searchDetail(rec);
			
      out.write("\r\n");
      out.write("			<div id=\"product\">\r\n");
      out.write("				<div class=\"products\" id=\"");
      out.print(pDto.getProductId());
      out.write("\">\r\n");
      out.write("					<img src=\"images/");
      out.print(rec);
      out.write(".jpg\" alt=\"商品画像\">\r\n");
      out.write("					<div id=\"product_txt\">\r\n");
      out.write("						<p>\r\n");
      out.write("							商品名:");
      out.print(pDto.getProductName());
      out.write("</p>\r\n");
      out.write("						<p>\r\n");
      out.write("							単体価格:");
      out.print(pDto.getPrice());
      out.write("円\r\n");
      out.write("						</p>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			");

			}
			}
			
      out.write("\r\n");
      out.write("		</section>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script src=\"js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("	<script src=\"js/img.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
